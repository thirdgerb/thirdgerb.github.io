<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 烈风&#39;s Blog</title>
    <link>https://thirdgerb.github.io/posts/</link>
    <description>Recent content in Posts on 烈风&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Wed, 11 Dec 2019 18:52:09 +0800</lastBuildDate>
    
	<atom:link href="https://thirdgerb.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>对话式视频应用展望</title>
      <link>https://thirdgerb.github.io/posts/2019-12/conversational-video-app/</link>
      <pubDate>Wed, 11 Dec 2019 18:52:09 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/2019-12/conversational-video-app/</guid>
      <description>本文将讨论一种新应用，&amp;rdquo;对话式-视频-应用&amp;rdquo; (conversational-video-application, 后文简称 &amp;ldquo;CVA&amp;rdquo;) )的设想，文章将包含以下方面: 概述 核心思路 技术实现 商业化应用场景 治理隐患 1. 概述 &amp;ldquo;对话式-视频-应用&amp;rdquo; 是 &amp;ldquo;视频&amp;rdquo;，&amp;rdquo;对话系统&amp;rdquo; 两者的结合，核心是 &amp;ldquo;对话&amp;rdquo;。 这是基于现有的对话技术，设想的一种面向用户（2c）的，偏向社交的应用。 简</description>
    </item>
    
    <item>
      <title>对话OS的前景与复杂多轮对话的关键功能点</title>
      <link>https://thirdgerb.github.io/posts/2019-08/multi-turn-conversation-bot-features/</link>
      <pubDate>Mon, 19 Aug 2019 12:44:20 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/2019-08/multi-turn-conversation-bot-features/</guid>
      <description>本文作者基于个人兴趣开发了一个工程化的多轮对话机器人框架(CommuneChatbot). 这篇文章用来记录自己对多轮对话机器人问题的部分认识和思考. 由于见识有限, 仅供参考, 欢迎批评指教. 本文将讨论以下三个问题: 对话OS(主要基于语音的操作系统)是对话机器人的未来方向之一, 或将领衔下一轮的交互革命 复杂多轮对话问题是现阶段对话机器人短板, 关键在于定义哪些功能点 ( features ) 从对话OS角度看, 并非只有机器学习一</description>
    </item>
    
    <item>
      <title>对话机器人的关键功能点(一) : N阶多轮对话的分形结构</title>
      <link>https://thirdgerb.github.io/posts/2019-07/conversation-features/</link>
      <pubDate>Mon, 22 Jul 2019 21:08:32 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/2019-07/conversation-features/</guid>
      <description>多轮对话机器人已经广泛地应用在智能客服, 智能音箱等领域. 它在技术上应该可以大致分拆成四个部分: 对话平台 : 负责获取和输出信息 ( 文字, 语音 或其它多媒体 ) 语义理解 : 负责将用户信息解析成数据结构 对话管理 : 负责执行用户意图, 生成反馈信号 输出合成 : 将反馈信号合成为文字或语音给用户 每个领域都存在许多技术难点. 而本文着重讨论 &amp;ldquo;对话管理&amp;rdquo; 领域的 &amp;ldquo;复杂多轮对话&amp;rdquo;问题. 以</description>
    </item>
    
    <item>
      <title>在Swoole中使用双IoC容器实现无污染的依赖注入</title>
      <link>https://thirdgerb.github.io/posts/2019-07/double-container-used-in-swoole/</link>
      <pubDate>Sat, 20 Jul 2019 11:19:53 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/2019-07/double-container-used-in-swoole/</guid>
      <description>简介: 容器(container)技术(可以理解为全局的工厂方法), 已经是现代项目的标配. 基于容器, 可以进一步实现控制反转, 依赖注入. Laravel 的巨大成功就是构建在它非常强大的IoC容器 illuminate/container 基础上的. 而 PSR-11 定义了标准的 container , 让更多的 PHP 项目依赖容器实现依赖解耦, 面向接口编程. 另一方面, PHP 天生一个进程响应一次请求的模型, 已经不能完全适应开发的需要. 于是 Swoole, reactPHP, roadrunner 也越来越流行. 它们共同的特点是一个 php worker 进程在生命周期内要响应</description>
    </item>
    
    <item>
      <title>多轮对话机器人框架 commune/chatbot 项目的demo发布</title>
      <link>https://thirdgerb.github.io/posts/2019-07/commune-chatbot-demo-release/</link>
      <pubDate>Thu, 18 Jul 2019 13:33:23 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/2019-07/commune-chatbot-demo-release/</guid>
      <description>commune/chatbot 的第一个demo 终于发布了!. 本项目是一个基于 php 开发的多轮对话机器人框架, 作者是 thirdgerb@gmail.com 它能用工程结合配置的方式, 开发各种能完成复杂多轮对话机器人, 可用于即时通讯软件和语音平台. demo 地址: 请使用微信扫描二维码, 进入微信公众号可以测试: (强烈推荐用桌面版微信测试) 或者在微信内搜索公众号: CommuneChatbot 什么是对话机器人 对话机器人, 指用户可以通过文字或语音对话理解用户的意图, 执行各种任务并将信息反馈给用户的机器人. 常见的</description>
    </item>
    
    <item>
      <title>php中用正则匹配中文</title>
      <link>https://thirdgerb.github.io/posts/2019-03/php-preg-match-chinese/</link>
      <pubDate>Fri, 22 Mar 2019 16:38:07 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/2019-03/php-preg-match-chinese/</guid>
      <description>原本以为正则匹配中文不是什么难事, 结果花了半个多小时. 没时间细细写, 简单记录一下: 正则里的字符本质上是个数, 用 [] 把字符括起来, 就是用数字范围来表示这些字符. 字母 + 数字 就很简单, 直接写 [a-zA-Z0-9] 要匹配中文, 通常是给定UTF-8 中中文起点和末尾的两个16进制数, 用来限定中文字符的范围. 但实际使用中踩了好几轮坑, 可以运行下面代码了解一下. &amp;lt;?php // 报warning, pcre 不支持 \u preg_match(&#39;/^[\u4e00-\u9fa5]+$/&#39;, $str); // 匹配不上 preg_match(&#39;/^[\x4e00-\x9fa5]+$/&#39;, $str); // 报错说 \x{} 里的数太大了 preg_match(&#39;/^[\x{4e00}-\x{9fa5}]+$/&#39;,</description>
    </item>
    
    <item>
      <title>正式开始 Chatbot 项目的开发</title>
      <link>https://thirdgerb.github.io/posts/2019-03/start-commune-chatbot-developing/</link>
      <pubDate>Thu, 21 Mar 2019 17:31:01 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/2019-03/start-commune-chatbot-developing/</guid>
      <description>2019年3月21日重启这个博客. 今天我正式从单位离职了, 顶着经济压力和各方的质疑, 从现在开始启动 Commune/Chatbot 项目的开发. 重新开启博客, 一方面是为了记录Commune/Chatbot 开发和设计的相关文章, 也是为了把一些技术方面的经验和想法努力沉淀下来, 不让它们随波而逝. 一个项目的成败也很重要, 不过对技术热情的坚持更加重要. 希望能用脚踏实地的努力来验证自己离职做项目的决心, 也希望这段经历能把自己的技术视野提升</description>
    </item>
    
    <item>
      <title>开启&#34;技术思考&#34;栏目</title>
      <link>https://thirdgerb.github.io/posts/2019-03/init-tech-thoughts-category/</link>
      <pubDate>Thu, 21 Mar 2019 17:23:38 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/2019-03/init-tech-thoughts-category/</guid>
      <description>开启&amp;rdquo;技术思考&amp;rdquo;栏目. 以后在这个栏目里放技术方面的思考, 主要是Commune 系列项目的设计理念.</description>
    </item>
    
    <item>
      <title>开启&#39;行业思考&#39;栏目</title>
      <link>https://thirdgerb.github.io/posts/2019-03/internet-bussiness-thoughts/</link>
      <pubDate>Thu, 21 Mar 2019 17:17:32 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/2019-03/internet-bussiness-thoughts/</guid>
      <description>开启&amp;rdquo;互联网思考&amp;rdquo;栏目. 未来在这里记录一些对互联网行业的观察和思考.</description>
    </item>
    
    <item>
      <title>markdown文档多平台发布工具设想</title>
      <link>https://thirdgerb.github.io/posts/2019-03/idea-md-multi-platform-poster/</link>
      <pubDate>Thu, 21 Mar 2019 17:04:43 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/2019-03/idea-md-multi-platform-poster/</guid>
      <description>今天重新启用了个人博客. 在Commune/Chatbot 的开发期间, 我打算一直写一些技术文档, 沉淀自己开发时的想法. 然后把这些文档发布出去, 一方面尝试做一些技术输出, 另一方面也经营一下自己作为程序员的形象, 为未来职业发展做一些准备. 目前考虑发布文章的渠道有: 个人博客 微信公众号 开发者头条 gitbooks 其实各个渠道发布的文章肯定大多数是重叠的. 手动一个个发布, 想必相当耗时. 作为程序员, 就应该用工具节省这一笔时间.</description>
    </item>
    
    <item>
      <title>搬迁服务器</title>
      <link>https://thirdgerb.github.io/posts/old/%E6%90%AC%E8%BF%81%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Thu, 06 Apr 2017 22:58:59 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/old/%E6%90%AC%E8%BF%81%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>因为换了一个网络, 之前买的海外服务器ping变高了, 因此新买了一个海外机房的服务器. 要把原来服务器的功能搬迁走. 不过很久没有做linux的工作, 全都生疏了. 只好从头做一遍, 记下来防止下次忘记: 用户 创建用户: useradd 修改用户密码: passwd 查看用户分组: cat /etc/passwd 增加sudo权限: 修改 /etc/sudoers 添加sudo权限 ssh key 添加rsa 公钥私钥 ssh-keygen -t rsa -C &amp;ldquo;myname@email.com&amp;rdquo; 记得要修改文件权限 在远程服务器中添加authorized_keys 在/etc/host</description>
    </item>
    
    <item>
      <title>linux操作相关的命令随手记</title>
      <link>https://thirdgerb.github.io/posts/old/some-linux-operation/</link>
      <pubDate>Mon, 22 Aug 2016 09:53:31 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/old/some-linux-operation/</guid>
      <description>今天要手动初始化一个centos的环境.把中间的操作都记录一下. 创建新用户流程 useradd 添加用户 passwd 修改用户密码 usermod 修改用户组 修改 /etc/sudoers 添加sudo权限 用户目录~/.ssh/, 添加authorized_keys 修改/etc/ssh/sshd_config , 允许用户登录 必须记得 修改 ~/.ssh 的权限为700 修改服务器名称 给服务器取个名字, 再修改下hosts 配置yum的源 cd /etc/yum.repos.d 推荐什么源好呢? 禁用账号 usermod -L &amp;lt;username&amp;gt; ## 忙起来完全没有时间记</description>
    </item>
    
    <item>
      <title>解决了lumen的migrate报错的问题</title>
      <link>https://thirdgerb.github.io/posts/old/fix-laravel-pdo-exception/</link>
      <pubDate>Tue, 16 Aug 2016 21:42:29 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/old/fix-laravel-pdo-exception/</guid>
      <description>用lumen, 运行artisan migrate 的时候, 出现了报错 SQLSTATE[HY000] [2002] No such file or directory . 单步追查源码也没有发现问题所在. 结果google搜索, 在stackoverflow 立刻找到了解决办法: Laravel 4: Change &amp;quot;host&amp;quot; in the app/config/database.php file from &amp;quot;localhost&amp;quot; to &amp;quot;127.0.0.1&amp;quot; Laravel 5: Change &amp;quot;DB_HOST&amp;quot; in the .env file from &amp;quot;localhost&amp;quot; to &amp;quot;127.0.0.1&amp;quot; 链接:http://stackoverflow.com/questions/20723803/pdoexception-sqlstatehy000-2002-no-such-file</description>
    </item>
    
    <item>
      <title>新服务器apache的设置</title>
      <link>https://thirdgerb.github.io/posts/old/apache%E7%9A%84%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Thu, 21 Jul 2016 22:12:01 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/old/apache%E7%9A%84%E8%AE%BE%E7%BD%AE/</guid>
      <description>把阿里云的服务器给退了, 换了conoha的服务器. 主要原因是阿里云不能科学上网, conoha的服务器看上去不错, 首先当然是能够用国外的节点, 然后流量没有约束, 价格还和阿里云差不太多. 换了服务器后环境又要重新搭. 不过昨天踩坑最严重的firewall-cmd开启端口的问题已经熟悉了. 今天重点学习配置xampp的apache 记录一下要点. 可能有各种错误 apache分配独有账号 useradd -g www -M -s /sbin/nologin httpd 创建web访问</description>
    </item>
    
    <item>
      <title>centOS环境安装记录</title>
      <link>https://thirdgerb.github.io/posts/old/centos%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Wed, 20 Jul 2016 18:29:19 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/old/centos%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/</guid>
      <description>今天买了阿里云的服务器, 准备安装一套环境, 把过程记录一下 目标 打算安装这些: PHP7 Apache2.2 mysql or MariaDB redis memcached yaf swoole nginx mongoDB 一个一个来. 系统设置 修改.bashrc 忍不了没有颜色的命令行, 所以第一步是配置.bashrc, 顺便添加了几个常用alias 配置.bashrc 配置.bash_alias 配置.vimrc 添加用户 创建用户 给用户添加root分组,并设置到sudoers 中 给用户添加authorize key 考虑要不要禁止root的登录</description>
    </item>
    
    <item>
      <title>install_hugo</title>
      <link>https://thirdgerb.github.io/posts/old/install_hugo/</link>
      <pubDate>Wed, 20 Jul 2016 17:32:55 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/old/install_hugo/</guid>
      <description>今天打算正式使用github的pages做博客. 安装了hugo试一试. 安装步骤 1.直接用homebrew 安装, 最快捷 brew install hugo 2.用hugo创建一个站点的文件 hugo new site myblog 3.在hugo的[http://themes.gohugo.io/]() 挑选了一个主题. 我选的是blackburn, 感谢作者! 4.安装主题 cd themes git clone https://github.com/yoshiharuyamashita/blackburn.git 5.修改配置, config.toml 文件 6.创建第一个文件 hugo new post/filename.md 7.生成页面! 用hugo serve 调试 hugo hugo serve 因为事情比</description>
    </item>
    
  </channel>
</rss>