<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开发记录 on 烈风&#39;s Blog</title>
    <link>https://thirdgerb.github.io/categories/%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/</link>
    <description>Recent content in 开发记录 on 烈风&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Wed, 18 Mar 2020 17:50:58 +0800</lastBuildDate>
    
	<atom:link href="https://thirdgerb.github.io/categories/%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Swoole 双工通讯服务端主动推送</title>
      <link>https://thirdgerb.github.io/posts/2020-03/swoole-duplex-push/</link>
      <pubDate>Wed, 18 Mar 2020 17:50:58 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/2020-03/swoole-duplex-push/</guid>
      <description>今天一直在探索，通过 Swoole 建立一个双工通讯后，怎么让服务端主动推送消息给用户。 简单来说，客户端与服务端建立了长连接后（TCP，WebSocket)，服务端会主动轮询每个客户端的收件箱。 如果发现有新消息，而长连接又存在，就通过长连接，主动推送给用户。 最后发现，用 Swoole 的子进程就可以解决这个问题。代码如下： &amp;lt;?php $serv = new Swoole\Server(&amp;quot;127.0.0.1&amp;quot;, 9501); $process = new Swoole\Process(function($process) use ($serv) { $redis = new Redis(); $redis-&amp;gt;connect(&#39;127.0.0.1&#39;,6379); while(true) { foreach($serv-&amp;gt;connections as $fd) { $message = $redis-&amp;gt;rPop(&amp;quot;test_$fd&amp;quot;); if (!empty($message) &amp;amp;&amp;amp; $serv-&amp;gt;exists($fd)) { $serv-&amp;gt;send($fd, &amp;quot;redis $fd: $message\n&amp;quot;); } } sleep(1); } }); $serv-&amp;gt;addProcess($process); //监听连接进入事件</description>
    </item>
    
    <item>
      <title>CommuneChatbot Demo 服务器搭建</title>
      <link>https://thirdgerb.github.io/posts/2020-03/server-setup/</link>
      <pubDate>Mon, 09 Mar 2020 14:58:50 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/2020-03/server-setup/</guid>
      <description>CommuneChatbot 的官网服务器备案没通过, 再放下去要罚款. 只好重新买一个香港的服务器, 重新建站. 整个流程特别长, 真是麻烦死了. 之前的流程已经忘光光了, 这次长记性先开一个文档来记录. 服务器购买 略. 初始化 useradd 创建用户 passwd 设置密码 /etc/sudoers 设置新用户管理员权限 .bashrc 修改一下界面, 界面不习惯就活不下去 /etc/vimrc 修改一下 vim 的界面 ssh 修改 创建 ~/.ssh目录, 并确保目录权限正确. 上传用户私钥到 ~/.ssh/authorized_keys. 修改 /etc/ssh/sshd_config : # 允许公钥登录 PubkeyAuthentication yes # 允许登录客户端保活 ClientAliveInterval 60 ClientAliveCountMax 3 #</description>
    </item>
    
    <item>
      <title>搬迁服务器</title>
      <link>https://thirdgerb.github.io/posts/old/%E6%90%AC%E8%BF%81%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Thu, 06 Apr 2017 22:58:59 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/old/%E6%90%AC%E8%BF%81%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>因为换了一个网络, 之前买的海外服务器ping变高了, 因此新买了一个海外机房的服务器. 要把原来服务器的功能搬迁走. 不过很久没有做linux的工作, 全都生疏了. 只好从头做一遍, 记下来防止下次忘记: 用户 创建用户: useradd 修改用户密码: passwd 查看用户分组: cat /etc/passwd 增加sudo权限: 修改 /etc/sudoers 添加sudo权限 ssh key 添加rsa 公钥私钥 ssh-keygen -t rsa -C &amp;ldquo;myname@email.com&amp;rdquo; 记得要修改文件权限 在远程服务器中添加authorized_keys 在/etc/host</description>
    </item>
    
    <item>
      <title>linux操作相关的命令随手记</title>
      <link>https://thirdgerb.github.io/posts/old/some-linux-operation/</link>
      <pubDate>Mon, 22 Aug 2016 09:53:31 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/old/some-linux-operation/</guid>
      <description>今天要手动初始化一个centos的环境.把中间的操作都记录一下. 创建新用户流程 useradd 添加用户 passwd 修改用户密码 usermod 修改用户组 修改 /etc/sudoers 添加sudo权限 用户目录~/.ssh/, 添加authorized_keys 修改/etc/ssh/sshd_config , 允许用户登录 必须记得 修改 ~/.ssh 的权限为700 修改服务器名称 给服务器取个名字, 再修改下hosts 配置yum的源 cd /etc/yum.repos.d 推荐什么源好呢? 禁用账号 usermod -L &amp;lt;username&amp;gt; ## 忙起来完全没有时间记</description>
    </item>
    
    <item>
      <title>解决了lumen的migrate报错的问题</title>
      <link>https://thirdgerb.github.io/posts/old/fix-laravel-pdo-exception/</link>
      <pubDate>Tue, 16 Aug 2016 21:42:29 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/old/fix-laravel-pdo-exception/</guid>
      <description>用lumen, 运行artisan migrate 的时候, 出现了报错 SQLSTATE[HY000] [2002] No such file or directory . 单步追查源码也没有发现问题所在. 结果google搜索, 在stackoverflow 立刻找到了解决办法: Laravel 4: Change &amp;quot;host&amp;quot; in the app/config/database.php file from &amp;quot;localhost&amp;quot; to &amp;quot;127.0.0.1&amp;quot; Laravel 5: Change &amp;quot;DB_HOST&amp;quot; in the .env file from &amp;quot;localhost&amp;quot; to &amp;quot;127.0.0.1&amp;quot; 链接:http://stackoverflow.com/questions/20723803/pdoexception-sqlstatehy000-2002-no-such-file</description>
    </item>
    
    <item>
      <title>新服务器apache的设置</title>
      <link>https://thirdgerb.github.io/posts/old/apache%E7%9A%84%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Thu, 21 Jul 2016 22:12:01 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/old/apache%E7%9A%84%E8%AE%BE%E7%BD%AE/</guid>
      <description>把阿里云的服务器给退了, 换了conoha的服务器. 主要原因是阿里云不能科学上网, conoha的服务器看上去不错, 首先当然是能够用国外的节点, 然后流量没有约束, 价格还和阿里云差不太多. 换了服务器后环境又要重新搭. 不过昨天踩坑最严重的firewall-cmd开启端口的问题已经熟悉了. 今天重点学习配置xampp的apache 记录一下要点. 可能有各种错误 apache分配独有账号 useradd -g www -M -s /sbin/nologin httpd 创建web访问</description>
    </item>
    
    <item>
      <title>centOS环境安装记录</title>
      <link>https://thirdgerb.github.io/posts/old/centos%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Wed, 20 Jul 2016 18:29:19 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/old/centos%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/</guid>
      <description>今天买了阿里云的服务器, 准备安装一套环境, 把过程记录一下 目标 打算安装这些: PHP7 Apache2.2 mysql or MariaDB redis memcached yaf swoole nginx mongoDB 一个一个来. 系统设置 修改.bashrc 忍不了没有颜色的命令行, 所以第一步是配置.bashrc, 顺便添加了几个常用alias 配置.bashrc 配置.bash_alias 配置.vimrc 添加用户 创建用户 给用户添加root分组,并设置到sudoers 中 给用户添加authorize key 考虑要不要禁止root的登录</description>
    </item>
    
    <item>
      <title>install_hugo</title>
      <link>https://thirdgerb.github.io/posts/old/install_hugo/</link>
      <pubDate>Wed, 20 Jul 2016 17:32:55 +0800</pubDate>
      
      <guid>https://thirdgerb.github.io/posts/old/install_hugo/</guid>
      <description>今天打算正式使用github的pages做博客. 安装了hugo试一试. 安装步骤 1.直接用homebrew 安装, 最快捷 brew install hugo 2.用hugo创建一个站点的文件 hugo new site myblog 3.在hugo的[http://themes.gohugo.io/]() 挑选了一个主题. 我选的是blackburn, 感谢作者! 4.安装主题 cd themes git clone https://github.com/yoshiharuyamashita/blackburn.git 5.修改配置, config.toml 文件 6.创建第一个文件 hugo new post/filename.md 7.生成页面! 用hugo serve 调试 hugo hugo serve 因为事情比</description>
    </item>
    
  </channel>
</rss>